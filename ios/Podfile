source 'https://cdn.cocoapods.org/'
source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '16.0'

require_relative '../node_modules/react-native/scripts/react_native_pods'
prepare_react_native_project!

# Desactiva Fabric & TurboModules
ENV['RCT_NEW_ARCH_ENABLED'] = '0'

# Frameworks opcionales
linkage = ENV['USE_FRAMEWORKS']
use_frameworks! :linkage => linkage.to_sym if linkage

target 'MyNewApp' do
  config = use_native_modules!

  # Trae react-native-maps desde el repo oficial GitHub con modular headers
  pod 'react-native-maps',
      git: 'https://github.com/react-native-maps/react-native-maps.git',
      tag: 'v1.23.7',
      :modular_headers => true

  use_react_native!(
    path: config[:reactNativePath],
    app_path: "#{Pod::Config.instance.installation_root}/..",
    new_arch_enabled: false,
    fabric_enabled: false
  )

  post_install do |installer|
    # 1) Configuración estándar de React Native
    react_native_post_install(
      installer,
      config[:reactNativePath],
      mac_catalyst_enabled: false
    )

    # 2) Workaround para Xcode 12.5 / M1 (si aplica)
    if installer.respond_to?(:__apply_Xcode_12_5_M1_post_install_workaround)
      installer.__apply_Xcode_12_5_M1_post_install_workaround
    end

    # 3) Bump GLOBAL de deployment target a iOS 16.0
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '16.0'
      end
    end

    # 4) Fijar C++17 en react-native-maps (evita errores de Objective-C++)
    installer.pods_project.targets
      .select { |t| t.name == 'react-native-maps' }
      .each do |target|
        target.build_configurations.each do |config|
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        end
      end
  end
end
