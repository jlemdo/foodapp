name: iOS Build & TestFlight

on:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-latest
    env:
      NODE_ENV: development

    steps:
      # 1. Checkout repo
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      # 2. Cache Ruby gems & set up Bundler
      - name: 💎 Set up Ruby & cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.7
          bundler-cache: true

      # 3. Cache Node.js modules
      - name: 🔧 Set up Node.js & cache npm
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 4. Install JS dependencies
      - name: 📦 Install JS dependencies
        run: npm ci

      # 5. Generate react-native-maps Podspec
      - name: 🔨 Generate react-native-maps Podspec
        working-directory: ./node_modules/react-native-maps
        run: |
          npm install
          npm run build

      # 6. Cache CocoaPods & install pods
      - name: 🧩 Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/.cocoapods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('ios/Podfile.lock') }}

      - name: 🛠️ Install iOS pods
        working-directory: ios
        run: bundle exec pod install --repo-update --verbose

      # 7. Decode distribution certificate
      - name: 🔑 Decode distribution certificate
        env:
          APPLE_CERT:    ${{ secrets.APPLE_CERTIFICATE }}
          CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
        run: |
          echo "$APPLE_CERT" | base64 --decode > ios/ios_distribution.p12
          security create-keychain -p "" build.keychain
          security import ios/ios_distribution.p12 \
            -k ~/Library/Keychains/build.keychain \
            -P "$CERT_PASSWORD" \
            -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain

      # 8. Decode provisioning profile
      - name: 📄 Decode provisioning profile
        env:
          PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROFILE" | base64 --decode > \
            ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      # 9. Decode App Store Connect API Key
      - name: 🔐 Decode App Store Connect API Key
        env:
          ASC_KEY: ${{ secrets.APPSTORE_API_KEY }}
          KEY_ID:  ${{ secrets.APPSTORE_KEY_ID }}
        run: |
          echo "$ASC_KEY" | base64 --decode > ios/AuthKey_${KEY_ID}.p8

      # 10. Run Fastlane beta lane
      - name: 🚀 Run Fastlane beta
        working-directory: ios
        run: bundle exec fastlane beta
